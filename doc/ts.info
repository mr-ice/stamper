This is ts.info, produced by makeinfo version 7.2 from ts.texi.

Copyright © 2025 Michael Rice

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".


File: ts.info,  Node: Top,  Next: Introduction,  Up: (dir)

TS User Manual
**************

This manual documents TS, a timestamp input tool that adds timestamps to
the beginning of each line of input, or optionally reformats timestamps
in the input.

   Copyright © 2025 Michael Rice

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".

* Menu:

* Introduction::                Overview of TS
* Invoking ts::                 Command line options
* Format Strings::              Timestamp format specification
* Examples::                    Usage examples
* Environment::                 Environment variables
* Reporting Bugs::              How to report bugs

 -- The Detailed Node Listing --

Invoking ts

* Command Line Options::        Complete list of options
* Format Specification::        How to specify formats

Format Strings

* Standard Formats::            Standard strftime formats
* TS Extensions::               TS-specific format extensions
* Mixed Formats::               Combining standard and extension formats

Examples

* Basic Usage::                 Simple timestamp examples
* Advanced Usage::              Complex usage scenarios
* Relative Timestamps::         Working with relative timestamps


File: ts.info,  Node: Introduction,  Next: Invoking ts,  Prev: Top,  Up: Top

1 Introduction
**************

TS is a command-line tool that adds timestamps to the beginning of each
line of input, or optionally reformats timestamps in the input.  It is a
reimplementation of the ts command from moreutils with enhanced features
including subsecond precision, relative timestamp conversion, and
improved error handling.


File: ts.info,  Node: Invoking ts,  Next: Format Strings,  Prev: Introduction,  Up: Top

2 Invoking ts
*************

The format for running the ts command is:

     ts [OPTIONS] [FORMAT]

   FORMAT is an optional timestamp format string.  If not specified, the
default format ‘%b %d %H:%M:%S’ is used.

* Menu:

* Command Line Options::        Complete list of options
* Format Specification::        How to specify formats


File: ts.info,  Node: Command Line Options,  Next: Format Specification,  Up: Invoking ts

2.1 Command Line Options
========================

‘-r, --relative’
     Convert existing timestamps in the input to relative timestamps.
     Recognizes various timestamp formats including Unix timestamps,
     syslog format, and custom formats.

‘-i, --incremental’
     Show incremental timestamps (time since last line).

‘-s, --since’
     Show timestamps since the start of the program.

‘-m, --monotonic’
     Use monotonic clock instead of real-time clock.

‘-u, --unique’
     Only output lines that are different from the previous line.

‘-h, --help’
     Display help information and exit.

‘-V, --version’
     Display version information and exit.


File: ts.info,  Node: Format Specification,  Prev: Command Line Options,  Up: Invoking ts

2.2 Format Specification
========================

The format string uses standard strftime(3) format specifiers with
additional extensions for subsecond precision.  See *note Format
Strings:: for complete details.


File: ts.info,  Node: Format Strings,  Next: Examples,  Prev: Invoking ts,  Up: Top

3 Format Strings
****************

TS supports both standard strftime format specifiers and TS-specific
extensions for enhanced timestamp formatting.

* Menu:

* Standard Formats::            Standard strftime formats
* TS Extensions::               TS-specific format extensions
* Mixed Formats::               Combining standard and extension formats


File: ts.info,  Node: Standard Formats,  Next: TS Extensions,  Up: Format Strings

3.1 Standard Formats
====================

TS supports all standard strftime(3) format specifiers.  Common ones
include:

‘%Y’
     Year with century (e.g., 2025)
‘%m’
     Month as decimal number (01-12)
‘%d’
     Day of month as decimal number (01-31)
‘%H’
     Hour as decimal number (00-23)
‘%M’
     Minute as decimal number (00-59)
‘%S’
     Second as decimal number (00-59)
‘%s’
     Unix timestamp (seconds since epoch)


File: ts.info,  Node: TS Extensions,  Next: Mixed Formats,  Prev: Standard Formats,  Up: Format Strings

3.2 TS Extensions
=================

TS provides additional format specifiers for subsecond precision:

‘%.S’
     Seconds with subsecond resolution (e.g., "44.440000")
‘%.s’
     Unix timestamp with subsecond resolution (e.g.,
     "1755921813.440000")
‘%.T’
     Time with subsecond resolution (e.g., "22:25:23.440000")
‘%N’
     Nanoseconds (e.g., "440000000")


File: ts.info,  Node: Mixed Formats,  Prev: TS Extensions,  Up: Format Strings

3.3 Mixed Formats
=================

Standard strftime patterns can be combined with TS extensions in a
single format string:

     %Y%m%d-%H%M%S.%.S

   This produces output like ‘20250822-225744.440000’.


File: ts.info,  Node: Examples,  Next: Environment,  Prev: Format Strings,  Up: Top

4 Examples
**********

* Menu:

* Basic Usage::                 Simple timestamp examples
* Advanced Usage::              Complex usage scenarios
* Relative Timestamps::         Working with relative timestamps


File: ts.info,  Node: Basic Usage,  Next: Advanced Usage,  Up: Examples

4.1 Basic Usage
===============

Add default timestamp to input:

     $ echo "test" | ts
     Aug 25 08:15:30 test

   Use custom format:

     $ echo "test" | ts "%Y-%m-%d %H:%M:%S"
     2025-08-25 08:15:30 test

   Add subsecond precision:

     $ echo "test" | ts "%.S"
     44.440000 test


File: ts.info,  Node: Advanced Usage,  Next: Relative Timestamps,  Prev: Basic Usage,  Up: Examples

4.2 Advanced Usage
==================

Show incremental timestamps:

     $ echo -e "line1\nline2" | ts -i
     +0.000000 line1
     +0.001234 line2

   Show unique lines only:

     $ echo -e "same\nsame\ndifferent" | ts -u
     Aug 25 08:15:30 same
     Aug 25 08:15:31 different

   Use monotonic clock:

     $ echo "test" | ts -m
     Aug 25 08:15:30 test


File: ts.info,  Node: Relative Timestamps,  Prev: Advanced Usage,  Up: Examples

4.3 Relative Timestamps
=======================

Convert Unix timestamp to relative:

     $ echo "1755921813 test" | ts -r
     2 hours ago test

   Convert syslog timestamp to relative:

     $ echo "Dec 22 22:25:23 test" | ts -r
     2 days ago test


File: ts.info,  Node: Environment,  Next: Reporting Bugs,  Prev: Examples,  Up: Top

5 Environment
*************

‘TZ’
     Time zone for timestamp formatting.  See tzset(3) for details.


File: ts.info,  Node: Reporting Bugs,  Next: GNU Free Documentation License,  Prev: Environment,  Up: Top

6 Reporting Bugs
****************

If you find a bug in TS, please report it on the project's GitHub page:
<https://github.com/mr-ice/stamper/issues>

   Please include:
   • The version of TS you are using
   • A description of the bug
   • Steps to reproduce the problem
   • The output you expected
   • The actual output you received


File: ts.info,  Node: GNU Free Documentation License,  Prev: Reporting Bugs,  Up: Top

Appendix A GNU Free Documentation License
*****************************************

This manual is free software; you can redistribute it and/or modify it
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation.


Tag Table:
Node: Top497
Node: Introduction2070
Node: Invoking ts2491
Node: Command Line Options2923
Node: Format Specification3706
Node: Format Strings4015
Node: Standard Formats4456
Node: TS Extensions4998
Node: Mixed Formats5486
Node: Examples5779
Node: Basic Usage6078
Node: Advanced Usage6448
Node: Relative Timestamps6913
Node: Environment7250
Node: Reporting Bugs7444
Node: GNU Free Documentation License7902

End Tag Table


Local Variables:
coding: utf-8
End:
